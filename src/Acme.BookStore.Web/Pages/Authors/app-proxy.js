/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module app

(function(){

  // controller acme.bookStore.authors.author

  (function(){

      abp.utils.createNamespace(window, 'acme.bookStore.authors.author');
      abp.appPath = "https://localhost:44382/"
      abp.webPath = "https://localhost:44381/"

      acme.bookStore.authors.author.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/author',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

      acme.bookStore.authors.author.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/author/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

      acme.bookStore.authors.author['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/author/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

      acme.bookStore.authors.author.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/author/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

      acme.bookStore.authors.author.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app/author' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

})();


