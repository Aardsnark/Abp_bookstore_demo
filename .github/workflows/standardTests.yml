name: ABP_Bookstore_Tests

on:
  push:
    branches: ["main", "pre-view-structure"]
  pull_request:
    branches: ["main", "pre-view-structure"]

jobs:
  linuxTests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./test/

    steps:
    - name: Check Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.nuget/packages  # Cache NuGet packages
          **/obj  # Cache build artifacts
        key: ${{ runner.os }}-nuget-obj-${{ hashFiles('**/*.csproj') }}
        id: cache-check
        restore-keys: |
          ${{ runner.os }}-nuget-obj-

    - name: Restore Cache
      if: steps.cache-check.outputs.cache-hit == 'true'
      run: echo "Cache hit, skip restore"
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies and build
      if: steps.cache-check.outputs.cache-hit != 'true'
      run: |
        for proj in $(find . -name '*.csproj'); do
          dotnet restore "$proj" --verbosity normal
          dotnet build "$proj" --no-restore --verbosity normal
        done
      timeout-minutes: 15

    - name: Test
      run: |
        for proj in $(find . -name '*.csproj'); do
          dotnet test "$proj" --no-build --verbosity normal --logger "trx;LogFileName=testresults.trx"
        done
      timeout-minutes: 15

    - name: Publish Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: '**/TestResults/*.trx'
  

  # windowsTests:
  #   needs: linuxTests  
  #   runs-on: ${{matrix.os}}

  #   defaults:
  #     run:
  #       working-directory: ./test/
    
   
  #   strategy:
  #     matrix:
  #       os: [windows-latest]

  #   steps:
  #   - uses: actions/checkout@v3
  
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: 7.0.x

  #   - name: Restore dependencies and build
  #     run: |
  #       Get-ChildItem -Recurse -Filter '*.csproj' | ForEach-Object {
  #         dotnet restore $_.FullName --verbosity normal
  #         dotnet build $_.FullName --no-restore --verbosity normal
  #       }
  #     timeout-minutes: 15

  #   - name: Test
  #     run: |
  #       Get-ChildItem -Recurse -Filter '*.csproj' | ForEach-Object {
  #         dotnet test $_.FullName --no-build --verbosity normal --logger "trx;LogFileName=testresults.trx"
  #       }
  #     timeout-minutes: 15

  #   - name: Publish Test Results
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: test-results
  #       path: '**/TestResults/*.trx'